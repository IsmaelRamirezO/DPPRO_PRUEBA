'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.34209
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34209.
'
Namespace wsInventarioDP
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="InventarioDPSoap", [Namespace]:="http://ws.dpportal.com.mx/InventarioDP/InventarioDP")>  _
    Partial Public Class InventarioDP
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConsultaExistenciaWebOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        ''' 
        Public strURL As String
        Public Sub New()
            MyBase.New
            'Me.Url = Global.DportenisPro.DPTienda.My.MySettings.Default.DPTienda_wsInventarioDP_InventarioDP
            strURL = "InventarioDP/InventarioDP.asmx"
            Dim urlSetting As String = System.Configuration.ConfigurationSettings.AppSettings("DPTienda.wsInventarioDP.InventarioDP")
            If (Not (urlSetting) Is Nothing) Then
                Me.Url = String.Concat(urlSetting, "")
            Else
                Me.Url = "http://dpssvr/InventarioDP/InventarioDP.asmx"
            End If
            If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
                Me.UseDefaultCredentials = True
                Me.useDefaultCredentialsSetExplicitly = False
            Else
                Me.useDefaultCredentialsSetExplicitly = True
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConsultaExistenciaWebCompleted As ConsultaExistenciaWebCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.dpportal.com.mx/InventarioDP/InventarioDP/ConsultaExistenciaWeb", RequestNamespace:="http://ws.dpportal.com.mx/InventarioDP/InventarioDP", ResponseNamespace:="http://ws.dpportal.com.mx/InventarioDP/InventarioDP", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaExistenciaWeb(ByVal CodArticulo As String, ByVal CodPlaza As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaExistenciaWeb", New Object() {CodArticulo, CodPlaza})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaExistenciaWeb(ByVal CodArticulo As String, ByVal CodPlaza As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaExistenciaWeb", New Object() {CodArticulo, CodPlaza}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaExistenciaWeb(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaExistenciaWebAsync(ByVal CodArticulo As String, ByVal CodPlaza As String)
            Me.ConsultaExistenciaWebAsync(CodArticulo, CodPlaza, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaExistenciaWebAsync(ByVal CodArticulo As String, ByVal CodPlaza As String, ByVal userState As Object)
            If (Me.ConsultaExistenciaWebOperationCompleted Is Nothing) Then
                Me.ConsultaExistenciaWebOperationCompleted = AddressOf Me.OnConsultaExistenciaWebOperationCompleted
            End If
            Me.InvokeAsync("ConsultaExistenciaWeb", New Object() {CodArticulo, CodPlaza}, Me.ConsultaExistenciaWebOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaExistenciaWebOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaExistenciaWebCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaExistenciaWebCompleted(Me, New ConsultaExistenciaWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ConsultaExistenciaWebCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaExistenciaWebCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaExistenciaWebCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
