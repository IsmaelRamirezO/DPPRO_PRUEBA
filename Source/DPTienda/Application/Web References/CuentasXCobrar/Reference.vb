'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.34209
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34209.
'
Namespace CuentasXCobrar
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CuentasXCobrarSoap", [Namespace]:="http://tempuri.org/Credito/CuentasXCobrar")>  _
    Partial Public Class CuentasXCobrar
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ObtCuentasXCobrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtCuentasXCobrarCanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SelectHistorialCrediticioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        ''' 
        Public strURL As String
        Public Sub New()
            MyBase.New
            'Me.Url = Global.DportenisPro.DPTienda.My.MySettings.Default.DPTienda_CuentasXCobrar_CuentasXCobrar
            strURL = "Credito/CuentasXCobrar.asmx"
            Dim urlSetting As String = System.Configuration.ConfigurationManager.AppSettings("DPTienda.CuentasXCobrar.CuentasXCobrar")
            If (Not (urlSetting) Is Nothing) Then
                Me.Url = String.Concat(urlSetting, "")
            Else
                Me.Url = "http://dpssvr/Credito/CuentasXCobrar.asmx"
            End If
            If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
                Me.UseDefaultCredentials = True
                Me.useDefaultCredentialsSetExplicitly = False
            Else
                Me.useDefaultCredentialsSetExplicitly = True
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ObtCuentasXCobrarCompleted As ObtCuentasXCobrarCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtCuentasXCobrarCanCompleted As ObtCuentasXCobrarCanCompletedEventHandler
        
        '''<remarks/>
        Public Event SelectHistorialCrediticioCompleted As SelectHistorialCrediticioCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Credito/CuentasXCobrar/ObtCuentasXCobrar", RequestNamespace:="http://tempuri.org/Credito/CuentasXCobrar", ResponseNamespace:="http://tempuri.org/Credito/CuentasXCobrar", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtCuentasXCobrar(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtCuentasXCobrar", New Object() {Desde, Hasta, Almacen, Caja})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtCuentasXCobrar(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtCuentasXCobrar", New Object() {Desde, Hasta, Almacen, Caja}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtCuentasXCobrar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtCuentasXCobrarAsync(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String)
            Me.ObtCuentasXCobrarAsync(Desde, Hasta, Almacen, Caja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtCuentasXCobrarAsync(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String, ByVal userState As Object)
            If (Me.ObtCuentasXCobrarOperationCompleted Is Nothing) Then
                Me.ObtCuentasXCobrarOperationCompleted = AddressOf Me.OnObtCuentasXCobrarOperationCompleted
            End If
            Me.InvokeAsync("ObtCuentasXCobrar", New Object() {Desde, Hasta, Almacen, Caja}, Me.ObtCuentasXCobrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtCuentasXCobrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtCuentasXCobrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtCuentasXCobrarCompleted(Me, New ObtCuentasXCobrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Credito/CuentasXCobrar/ObtCuentasXCobrarCan", RequestNamespace:="http://tempuri.org/Credito/CuentasXCobrar", ResponseNamespace:="http://tempuri.org/Credito/CuentasXCobrar", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtCuentasXCobrarCan(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtCuentasXCobrarCan", New Object() {Desde, Hasta, Almacen, Caja})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtCuentasXCobrarCan(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtCuentasXCobrarCan", New Object() {Desde, Hasta, Almacen, Caja}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtCuentasXCobrarCan(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtCuentasXCobrarCanAsync(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String)
            Me.ObtCuentasXCobrarCanAsync(Desde, Hasta, Almacen, Caja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtCuentasXCobrarCanAsync(ByVal Desde As Date, ByVal Hasta As Date, ByVal Almacen As String, ByVal Caja As String, ByVal userState As Object)
            If (Me.ObtCuentasXCobrarCanOperationCompleted Is Nothing) Then
                Me.ObtCuentasXCobrarCanOperationCompleted = AddressOf Me.OnObtCuentasXCobrarCanOperationCompleted
            End If
            Me.InvokeAsync("ObtCuentasXCobrarCan", New Object() {Desde, Hasta, Almacen, Caja}, Me.ObtCuentasXCobrarCanOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtCuentasXCobrarCanOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtCuentasXCobrarCanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtCuentasXCobrarCanCompleted(Me, New ObtCuentasXCobrarCanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Credito/CuentasXCobrar/SelectHistorialCrediticio", RequestNamespace:="http://tempuri.org/Credito/CuentasXCobrar", ResponseNamespace:="http://tempuri.org/Credito/CuentasXCobrar", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SelectHistorialCrediticio(ByVal Asociado As Integer, ByVal FechaDesde As Date, ByVal FechaHasta As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SelectHistorialCrediticio", New Object() {Asociado, FechaDesde, FechaHasta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSelectHistorialCrediticio(ByVal Asociado As Integer, ByVal FechaDesde As Date, ByVal FechaHasta As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SelectHistorialCrediticio", New Object() {Asociado, FechaDesde, FechaHasta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSelectHistorialCrediticio(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SelectHistorialCrediticioAsync(ByVal Asociado As Integer, ByVal FechaDesde As Date, ByVal FechaHasta As Date)
            Me.SelectHistorialCrediticioAsync(Asociado, FechaDesde, FechaHasta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SelectHistorialCrediticioAsync(ByVal Asociado As Integer, ByVal FechaDesde As Date, ByVal FechaHasta As Date, ByVal userState As Object)
            If (Me.SelectHistorialCrediticioOperationCompleted Is Nothing) Then
                Me.SelectHistorialCrediticioOperationCompleted = AddressOf Me.OnSelectHistorialCrediticioOperationCompleted
            End If
            Me.InvokeAsync("SelectHistorialCrediticio", New Object() {Asociado, FechaDesde, FechaHasta}, Me.SelectHistorialCrediticioOperationCompleted, userState)
        End Sub
        
        Private Sub OnSelectHistorialCrediticioOperationCompleted(ByVal arg As Object)
            If (Not (Me.SelectHistorialCrediticioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SelectHistorialCrediticioCompleted(Me, New SelectHistorialCrediticioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ObtCuentasXCobrarCompletedEventHandler(ByVal sender As Object, ByVal e As ObtCuentasXCobrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtCuentasXCobrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ObtCuentasXCobrarCanCompletedEventHandler(ByVal sender As Object, ByVal e As ObtCuentasXCobrarCanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtCuentasXCobrarCanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SelectHistorialCrediticioCompletedEventHandler(ByVal sender As Object, ByVal e As SelectHistorialCrediticioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SelectHistorialCrediticioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
